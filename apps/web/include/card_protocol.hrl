%% Author: Igor compiler
%% Compiler version: igorc 2.1.4
%% DO NOT EDIT THIS FILE - it is machine generated

-record(slack_receiver, {
    kind :: card_protocol:slack_receiver_kind(),
    title :: binary(),
    branch :: binary() | 'undefined',
    min_log_level = error :: card_protocol:log_level(),
    throttle_sec :: igor_types:int()
}).

-record(card_config, {
    id :: atom(),
    applications :: [card_protocol:application_key()],
    log_lifetime_days = 60 :: igor_types:int()
}).

-record(card_application, {
    id :: atom(),
    name :: binary(),
    key :: binary(),
    components = [] :: [card_protocol:component_key()],
    log_lifetime_days = 60 :: igor_types:int(),
    default_pdb_source :: card_protocol:pdb_source_key() | 'undefined',
    pdb_sources :: igor_types:dict(binary(), card_protocol:pdb_source_key()) | 'undefined'
}).

-record(card_component_template, {
    id :: atom(),
    collapse_fields = [] :: [binary()],
    default_metadata_fields = [] :: [binary()]
}).

-record(card_component, {
    id :: atom(),
    name :: binary(),
    key :: binary(),
    template :: card_protocol:component_template_key(),
    slack_receivers = [] :: [card_protocol:slack_receiver()]
}).

-record(card_pdb_source, {
    id :: atom(),
    name :: binary(),
    key :: binary(),
    source :: card_protocol:pdb_source_kind(),
    % Variables: {app}, {component}, {branch}, {version}
    url :: binary(),
    auth_header :: binary() | 'undefined',
    auth_header_value :: binary() | 'undefined'
}).

