%% @author Igor compiler
%% @doc Compiler version: igorc 2.1.4
%% DO NOT EDIT THIS FILE - it is machine generated

-module(cards).

-include("card_protocol.hrl").

-export([
    card/1,
    card_config/1,
    card_application/1,
    card_component_template/1,
    card_component/1,
    card_pdb_source/1
]).

-spec card(Key) -> Record when
      Key :: catalogue:key(),
      Record :: card_protocol:card().

card(Key) ->
    catalogue:view(Key, card, fun card_protocol:card_from_json/1).

-spec card_config(Key) -> Record when
      Key :: catalogue:key(),
      Record :: card_protocol:card_config().

card_config(Key) ->
    catalogue:view(Key, card_config, fun card_protocol:card_config_from_json/1).

-spec card_application(Key) -> Record when
      Key :: catalogue:key(),
      Record :: card_protocol:card_application().

card_application(Key) ->
    catalogue:view(Key, card_application, fun card_protocol:card_application_from_json/1).

-spec card_component_template(Key) -> Record when
      Key :: catalogue:key(),
      Record :: card_protocol:card_component_template().

card_component_template(Key) ->
    catalogue:view(Key, card_component_template, fun card_protocol:card_component_template_from_json/1).

-spec card_component(Key) -> Record when
      Key :: catalogue:key(),
      Record :: card_protocol:card_component().

card_component(Key) ->
    catalogue:view(Key, card_component, fun card_protocol:card_component_from_json/1).

-spec card_pdb_source(Key) -> Record when
      Key :: catalogue:key(),
      Record :: card_protocol:card_pdb_source().

card_pdb_source(Key) ->
    catalogue:view(Key, card_pdb_source, fun card_protocol:card_pdb_source_from_json/1).

